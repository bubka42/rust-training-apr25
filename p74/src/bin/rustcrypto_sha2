use sha2::{Digest, Sha224, Sha256, Sha384, Sha512, Sha512_224, Sha512_256};

fn main() {
    // Get the input string from command line arguments
    let args: Vec<String> = std::env::args().collect();
    if args.len() != 2 {
        eprintln!("Usage: {} <input_string>", args[0]);
        std::process::exit(1);
    }
    let input_string = &args[2];

    // Create a new Sha256 object
    let mut hasher = match &args[1][..] {
        "sha224" => Sha224::new(),
        "sha256" => Sha256::new(),
        "sha384" => Sha384::new(),
        "sha512" => Sha512::new(),
        "sha512_224" => Sha512_224::new(),
        "sha512_256" => Sha512_256::new(),
        _ => {
            eprintln!("Unsupported hash algorithm: {}", args[1]);
            std::process::exit(1);
        }
    };

    // Write input string to hasher
    hasher.update(input_string.as_bytes());

    // Read hash digest and consume hasher
    let result = hasher.finalize();

    // Print the hash in hexadecimal format
    println!("{:x}", result);
}
